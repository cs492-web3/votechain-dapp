name: Deploy Project
on:
  push:
    branches:
      - main
jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x

      # Github Repository Secrets를 통해 환경 변수 파일을 생성
      - name: Generate Environment Variables File for Production
        run: |
          echo "ALCHEMY_API_KEY=$ALCHEMY_API_KEY" >> .env
          echo "ETHERSCAN_API_KEY=$ETHERSCAN_API_KEY" >> .env
          echo "NEXT_PUBLIC_DEFAULT_CHAIN=$NEXT_PUBLIC_DEFAULT_CHAIN" >> .env
          echo "REACT_APP_ALCHEMY_KEY=$REACT_APP_ALCHEMY_KEY" >> .env
          echo "REACT_APP_PROJECT_ID=$REACT_APP_PROJECT_ID" >> .env
          echo "REACT_APP_PROJECT_ID=$REACT_APP_PROJECT_ID" >> .env
        env:
          ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          NEXT_PUBLIC_DEFAULT_CHAIN: ${{ secrets.NEXT_PUBLIC_DEFAULT_CHAIN }}
          REACT_APP_ALCHEMY_KEY: ${{ secrets.REACT_APP_ALCHEMY_KEY }}
          REACT_APP_PROJECT_ID: ${{ secrets.REACT_APP_PROJECT_ID }}

      # 캐싱 설정
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{runner.OS}}-build-${{hashFiles('**/yarn.lock')}}
          restore-keys: |
            ${{ runner.OS }}-build-${{ runner.OS }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --prod
        working-directory: ${{ env.working-directory }}

      - name: Build
        run: yarn run build
        working-directory: ${{ env.working-directory }}
        env:
          NODE_ENV: production

      - name: login to github
        run: |
          git config --global user.email "seajh1114@gmail.com"
          git config --global user.name "seajung"

      - name: Deploy
        run: |
          git remote set-url origin https://seajung:${{ secrets.MY_GITHUB_TOKEN }}@github.com/cs492-web3/votechain-dapp.git
          yarn run deploy
        working-directory: ${{ env.working-directory }}
        env:
          NODE_ENV: production